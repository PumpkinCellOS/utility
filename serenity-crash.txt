Crash log:

```
CrashDaemon(20): --- Backtrace for thread #0 (TID 30) ---
CrashDaemon(20): 0x3392fb34: [libc.so] malloc +0x24 (malloc.cpp:368)
CrashDaemon(20): 0x3397152a: [libc.so] AK::StringImpl::create_uninitialized(unsigned long, char*&) +0x2a (StringImpl.cpp:93)
CrashDaemon(20): 0x33971b41: [libc.so] AK::StringImpl::create(char const*, unsigned long, AK::ShouldChomp) +0xe1 (StringImpl.cpp:120)
CrashDaemon(20): 0x33970f25: [libc.so] AK::StringBuilder::to_string() const +0x65 (String.h:85)
CrashDaemon(20): 0x3397b459: [libc.so] AK::URL::to_string() const +0x2d9 (URL.cpp:298)
CrashDaemon(20): 0x89f16689: [libweb.so] Web::LoadRequest::hash() const +0xb9 (Atomic.h:266)
CrashDaemon(20): 0x89f12ac5: [libweb.so] Web::ResourceLoader::load_resource(Web::Resource::Type, Web::LoadRequest const&) +0x135 (HashTable.h:146)
CrashDaemon(20): 0x89f0070d: [libweb.so] bool Web::CSS::CSSStyleSheet::for_first_not_loaded_import_rule<Web::CSSLoader::load_next_import_if_needed()::{lambda(auto:1&)#1}>(Web::CSSLoader::load_next_import_if_needed()::{lambda(auto:1&)#1}) +0x5ed (Atomic.h:266)
CrashDaemon(20): 0x89f00c7a: [libweb.so] Web::CSSLoader::resource_did_fail() +0x1a (CSSLoader.cpp:100)
CrashDaemon(20): 0x89f0c993: [libweb.so] Web::ResourceClient::set_resource(Web::Resource*) +0x163 (Resource.cpp:157)
... this repeates many times ...
CrashDaemon(20): 0x89f0071f: [libweb.so] bool Web::CSS::CSSStyleSheet::for_first_not_loaded_import_rule<Web::CSSLoader::load_next_import_if_needed()::{lambda(auto:1&)#1}>(Web::CSSLoader::load_next_import_if_needed()::{lambda(auto:1&)#1}) +0x5ff (Atomic.h:266)
CrashDaemon(20): 0x89f00c7a: [libweb.so] Web::CSSLoader::resource_did_fail() +0x1a (CSSLoader.cpp:100)
CrashDaemon(20): 0x89f0c237: [libweb.so] Web::Resource::for_each_client(AK::Function<void (Web::ResourceClient&)>) +0x257 (Function.h:57)
CrashDaemon(20): 0x89f0c65f: [libweb.so] Web::Resource::did_fail(AK::Badge<Web::ResourceLoader>, AK::String const&) +0xcf (OwnPtr.h:135)
CrashDaemon(20): 0x89f0f88a: [libweb.so] AK::Function<void (AK::String const&)>::CallableWrapper<Web::ResourceLoader::load_resource(Web::Resource::Type, Web::LoadRequest const&)::{lambda(auto:1&)#2}>::call(AK::String const&) const +0x3a (Function.h:103)
CrashDaemon(20): 0x89f10921: [libweb.so] AK::Function<void (bool, unsigned int, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&, AK::Optional<unsigned int>, AK::Span<unsigned char const>)>::CallableWrapper<Web::ResourceLoader::load(Web::LoadRequest const&, AK::Function<void (AK::Span<unsigned char const>, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&)>, AK::Function<void (AK::String const&)>)::{lambda(bool, auto:1, auto:2&, auto:3, AK::Span<unsigned char const>)#4}>::call(bool, unsigned int, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&, AK::Optional<unsigned int>, AK::Span<unsigned char const>) const +0x2f1 (Atomic.h:266)
CrashDaemon(20): 0x5530c388: [libprotocol.so] AK::Function<void (bool, unsigned int)>::CallableWrapper<Protocol::Download::set_should_buffer_all_input(bool)::{lambda(auto:1, unsigned int)#2}>::call(bool, unsigned int) const +0xd8 (Download.cpp:100)
CrashDaemon(20): 0x5530c191: [libprotocol.so] AK::Function<void ()>::CallableWrapper<Protocol::Download::stream_into(AK::OutputStream&)::{lambda()#2}>::call() const +0x191 (Function.h:57)
CrashDaemon(20): 0x1bd88ed4: [libcore.so] Core::Object::dispatch_event(Core::Event&, Core::Object*) +0x64 (Object.h:104)
CrashDaemon(20): 0x1bd722c4: [libcore.so] Core::EventLoop::pump(Core::EventLoop::WaitMode) +0x3e4 (Atomic.h:266)
CrashDaemon(20): 0x1bd7288b: [libcore.so] Core::EventLoop::exec() +0x4b (EventLoop.cpp:390)
CrashDaemon(20): 0x89f14737: [libweb.so] Web::ResourceLoader::load_sync(AK::URL const&, AK::Function<void (AK::Span<unsigned char const>, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&)>, AK::Function<void (AK::String const&)>) +0xf7 (ResourceLoader.cpp:57)
CrashDaemon(20): 0x89e6e1dc: [libweb.so] Web::HTML::HTMLScriptElement::prepare_script(AK::Badge<Web::HTML::HTMLDocumentParser>) +0x198c (OwnPtr.h:135)
CrashDaemon(20): 0x89e88526: [libweb.so] Web::HTML::HTMLDocumentParser::handle_text(Web::HTML::HTMLToken&) +0x2b6 (HTMLDocumentParser.cpp:1895)
CrashDaemon(20): 0x89e8475e: [libweb.so] .L4355 +0xe (HTMLDocumentParser.cpp:229)
CrashDaemon(20): 0x89e90941: [libweb.so] Web::HTML::HTMLDocumentParser::run(AK::URL const&) +0x2e1 (HTMLDocumentParser.cpp:154)
CrashDaemon(20): 0x89f0503b: [libweb.so] Web::FrameLoader::parse_document(Web::DOM::Document&, AK::ByteBuffer const&) +0xbb (Atomic.h:266)
CrashDaemon(20): 0x89f08936: [libweb.so] Web::FrameLoader::resource_did_load() +0xbb6 (FrameLoader.cpp:272)
CrashDaemon(20): 0x89f0c237: [libweb.so] Web::Resource::for_each_client(AK::Function<void (Web::ResourceClient&)>) +0x257 (Function.h:57)
CrashDaemon(20): 0x89f0e1f4: [libweb.so] Web::Resource::did_load(AK::Badge<Web::ResourceLoader>, AK::Span<unsigned char const>, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&) +0xf74 (OwnPtr.h:135)
CrashDaemon(20): 0x89f0f90a: [libweb.so] AK::Function<void (AK::Span<unsigned char const>, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&)>::CallableWrapper<Web::ResourceLoader::load_resource(Web::Resource::Type, Web::LoadRequest const&)::{lambda(auto:1, auto:2&)#1}>::call(AK::Span<unsigned char const>, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&) const +0x4a (Function.h:103)
CrashDaemon(20): 0x89f10869: [libweb.so] AK::Function<void (bool, unsigned int, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&, AK::Optional<unsigned int>, AK::Span<unsigned char const>)>::CallableWrapper<Web::ResourceLoader::load(Web::LoadRequest const&, AK::Function<void (AK::Span<unsigned char const>, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&)>, AK::Function<void (AK::String const&)>)::{lambda(bool, auto:1, auto:2&, auto:3, AK::Span<unsigned char const>)#4}>::call(bool, unsigned int, AK::HashMap<AK::String, AK::String, AK::CaseInsensitiveStringTraits> const&, AK::Optional<unsigned int>, AK::Span<unsigned char const>) const +0x239 (Function.h:57)
CrashDaemon(20): 0x5530c388: [libprotocol.so] AK::Function<void (bool, unsigned int)>::CallableWrapper<Protocol::Download::set_should_buffer_all_input(bool)::{lambda(auto:1, unsigned int)#2}>::call(bool, unsigned int) const +0xd8 (Download.cpp:100)
CrashDaemon(20): 0x5530c191: [libprotocol.so] AK::Function<void ()>::CallableWrapper<Protocol::Download::stream_into(AK::OutputStream&)::{lambda()#2}>::call() const +0x191 (Function.h:57)
CrashDaemon(20): 0x1bd88ed4: [libcore.so] Core::Object::dispatch_event(Core::Event&, Core::Object*) +0x64 (Object.h:104)
CrashDaemon(20): 0x1bd722c4: [libcore.so] Core::EventLoop::pump(Core::EventLoop::WaitMode) +0x3e4 (Atomic.h:266)
CrashDaemon(20): 0x1bd7288b: [libcore.so] Core::EventLoop::exec() +0x4b (EventLoop.cpp:390)
CrashDaemon(20): 0x679f4ed4: [/bin/WebContent] main +0x1c4 (Atomic.h:266)
CrashDaemon(20): 0x679f5005: [/bin/WebContent] _start +0x45 (crt0_shared.cpp:60)
```
